diff --git a/node_modules/ytsr/lib/parseItem.js b/node_modules/ytsr/lib/parseItem.js
index 4caa1a8..f5f4601 100644
--- a/node_modules/ytsr/lib/parseItem.js
+++ b/node_modules/ytsr/lib/parseItem.js
@@ -56,6 +56,7 @@ const parseItem = (item, resp) => {
       return parseClarification(item[type]);
 
     // Skip Adds for now
+    case 'adSlotRenderer':
     case 'carouselAdRenderer':
     case 'searchPyvRenderer':
     case 'promotedVideoRenderer':
@@ -120,7 +121,7 @@ const parseVideo = obj => {
       author.navigationEndpoint.commandMetadata.webCommandMetadata.url;
   }
   const badges = Array.isArray(obj.badges) ? obj.badges.map(a => a.metadataBadgeRenderer.label) : [];
-  const isLive = badges.some(b => b === 'LIVE NOW');
+  const isLive = badges.some(b => b === 'LIVE');
   const upcoming = obj.upcomingEventData ? Number(`${obj.upcomingEventData.startTime}000`) : null;
   const ctsr = obj.channelThumbnailSupportedRenderers;
   const authorImg = !ctsr ? { thumbnail: { thumbnails: [] } } : ctsr.channelThumbnailWithLinkRenderer;
@@ -351,8 +352,12 @@ const parseMovie = obj => {
 };
 
 const parseShort = obj => {
-  const playerHeader = obj.navigationEndpoint.reelWatchEndpoint.overlay
-    .reelPlayerOverlayRenderer.reelPlayerHeaderSupportedRenderers.reelPlayerHeaderRenderer;
+  const playerOverlay = obj.navigationEndpoint.reelWatchEndpoint.overlay.reelPlayerOverlayRenderer;
+  const playerHeader = playerOverlay.reelPlayerHeaderSupportedRenderers &&
+    playerOverlay.reelPlayerHeaderSupportedRenderers.reelPlayerHeaderRenderer;
+  if (!playerHeader) {
+    return;
+  }
   const channelNavEndpoint = playerHeader.channelTitleText.runs[0].navigationEndpoint;
   return {
     type: 'short',
